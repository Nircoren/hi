{"version":3,"sources":["serviceWorker.js","components/dataBase.js","pages/CreateExp.js","components/board.js","components/Card.js","pages/MainPage.js","pages/StartPage.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","dataBase","divStyle","color","CreateExp","props","handleChangeDate","date","setState","startDate","onImageChange","event","target","files","image","URL","createObjectURL","state","storyName","storyDescription","dateValue","Date","mainPageDate","cardId","noDate","handleChange","bind","handleChangeArea","addItem","onCalendarClose","this","x","document","getElementById","getAttribute","break","value","e","preventDefault","obj","returnCardId","push","className","id","onChange","label","variant","htmlFor","style","fontWeight","fontSize","borderRadius","background","padding","visibility","type","selected","dateFormat","disabled","Button","onClick","maxHeight","minHeight","minWidth","resize","boxSizing","maxLength","placeholder","to","React","Component","Board","onDrop","card_id","dataTransfer","getData","card","display","appendChild","work","map","indexOf","Number","splice","onDragOver","children","Card","draggable","onDragStart","setData","setTimeout","stopPropagation","src","alt","MainPage","loadingStory","fontStyle","marginTop","StartPage","App","basename","pathname","exact","path","render","component","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.07147aaa.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const dataBase =[]","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport {dataBase} from '../components/dataBase'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Button from '@material-ui/core/Button'; \n\n\n\nconst divStyle = {\n  color: 'blue',\n};\n\n\n\n\nclass CreateExp extends React.Component {\n  constructor(props){\n    super(props)\n    this.state={\n      image: \"./logo192.png\" ,\n      storyName: \"\" ,\n      date:null,\n      storyDescription:null ,\n      dateValue:null,\n      startDate: new Date(),\n      mainPageDate: null,\n      cardId:0,\n      noDate:false\n\n\n      }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeArea=this.handleChangeArea.bind(this)\n    this.onImageChange=this.onImageChange.bind(this)\n    this.addItem=this.addItem.bind(this)\n    this.handleChangeDate=this.handleChangeDate.bind(this)\n    this.onCalendarClose=this.onCalendarClose.bind(this)\n    this.noDate=this.noDate.bind(this)\n  }\n  noDate(){\n    let noDate= this.state.noDate\n    var x = document.getElementById(\"datePicker\").getAttribute(\"value\");\n    if (noDate == false) {\n      this.setState({\n        noDate:true,\n        mainPageDate: this.break()\n      })\n    } else {\n      this.setState({\n        mainPageDate:x,\n        noDate:false,\n      })\n    }\n    return noDate\n  }\n\n  break(){\n   return <br/>\n  }\n\n  componentDidMount(){\n    var x = document.getElementById(\"datePicker\").getAttribute(\"value\");\n    this.setState({ mainPageDate: x})\n  }\n  \n  onCalendarClose(){\n    var x = document.getElementById(\"datePicker\").getAttribute(\"value\");\n    this.setState({\n      mainPageDate: x})\n  }\n\n  handleChangeDate = date => {\n    this.setState({\n      startDate: date,\n    });\n    \n\n    \n   \n   \n  };\n  onImageChange = (event) => {\n    if (event.target.files && event.target.files[0]) {\n     var image =URL.createObjectURL(event.target.files[0])\n     this.setState({image: image})\n     \n   }\n  }\n\n  handleChange(event) {\n    this.setState({storyDescription: event.target.value});\n  }\n\n\n handleChangeArea(event) {\n    this.setState({storyName: event.target.value});\n  \n }\n\n addItem(e){\n  e.preventDefault();\n  const storyName = this.state.storyName;\n\n  // function to prevent making stories without names\n  // if(storyName == \"\"){\n  //   alert(\"missing story name\")\n  //   return\n  // }\n  const storyDescription = this.state.storyDescription\n  const returnCardId=this.props.returnCardId()\n  const image = this.state.image\n  const mainPageDate= this.state.mainPageDate  \n  const obj = {'id': returnCardId,'storyName':storyName, 'storyDescription':storyDescription,'image':image,'mainPageDate':mainPageDate};\n  dataBase.push(obj)\n  this.props.cardId()\n  \n \n \n this.setState({\n  storyDescription:\"\",\n  storyName:\"\",\n  image:\"./logo192.png\",\n  mainPageDate:document.getElementById(\"datePicker\").getAttribute(\"value\"),\n  startDate: new Date(),\n\n })   \n \n}\n\n\n\n  \n  render(){\n    const style = {\n      maxHeight:'150px',\n      minHeight:'150px',\n      minWidth:'70vh',\n        resize:'none',\n        padding:'15px',\n        boxSizing:'border-box',\n        fontSize:'15px'};\n    return (\n      <div className=\"form\">\n        <div id=\"nameStoryDiv\">\n        <p>Name your story:</p>\n      <input onChange={this.handleChangeArea} \n             label=\"Outlined\" \n             variant=\"outlined\" \n             id=\"nameStory\"\n             value={this.state.storyName}/>\n        </div>\n        \n       \n          <div id=\"filePick\">\n          <label id=\"filePickerLabel\" htmlFor=\"filePicker\" style={{ fontWeight:'100',fontSize:'20px',borderRadius:\"5px\",background:\"grey\",color:'white', padding:\"5px 10px\" }}>\n              click here to choose a photo \n          </label>\n          <input id=\"filePicker\" onChange={this.onImageChange} style={{visibility:\"hidden\"}} type={\"file\"}/>\n          </div>\n\n    \n        <div id=\"dateAndButton\">\n        <p>Date:</p>\n        <div id=\"buttonDate\">\n          <DatePicker\n            style={divStyle}\n            selected={this.state.startDate}\n            onChange={this.handleChangeDate}\n            dateFormat=\"MM/dd/yyyy\"\n            id=\"datePicker\"\n            onCalendarClose={this.onCalendarClose}\n            disabled={this.state.noDate}\n            />\n            <Button id=\"dateButton\" \n            onClick={this.noDate} \n            variant=\"contained\" \n            color=\"primary\" >no date</Button>\n\n          </div>\n        </div>\n    \n        <Button  className=\"addStoryButton\" \n                 variant=\"contained\" \n                 color=\"primary\" \n                 onClick={this.addItem}>add story</Button>\n\n      \n          \n      <div id=\"textAreaDiv\">\n        <p>what happend?</p>\n        <textarea className=\"textArea\" \n           style={style} value={this.state.storyDescription} \n           onChange={this.handleChange}\n           maxLength=\"400\"\n           placeholder=\"400 characters max\"/>\n      </div>\n     \n      <div className=\"backToMain\">\n          <Link className=\"backToMainButton\" to='/MainPage'>\n          <Button id=\"backToMainButtonB\" variant=\"contained\" color=\"secondary\" >go back</Button>\n         </Link>\n      </div>\n\n        \n      \n      </div>\n    )\n  }\n}\n\n\nexport default CreateExp","import React from 'react'\r\nimport { dataBase } from './dataBase'\r\n\r\nfunction Board(props){\r\n\r\n    const drop= e =>{\r\n        \r\n        e.preventDefault()\r\n        const card_id = e.dataTransfer.getData('card_id')\r\n        const card =document.getElementById(card_id)\r\n        card.style.display='block'\r\n        e.target.appendChild(card)\r\n        if (props.className === 'trashBlock') {\r\n        var work = dataBase.map(function(obj) { return obj.id; }).indexOf(Number(card_id));\r\n        dataBase.splice(work,1)\r\n\r\n            \r\n        }\r\n    }\r\n    const dragOver = e =>{\r\n        e.preventDefault()\r\n\r\n\r\n    }\r\n\r\n    return(\r\n<div\r\nid={props.id}\r\nclassName={props.className}\r\nonDrop={drop}\r\nonDragOver={dragOver}>{props.children}</div>\r\n\r\n    )\r\n}\r\n\r\nexport default Board\r\n","import React from 'react'\r\n\r\nfunction Card(props) {\r\n  const dragStart=e=>{\r\n  const target=e.target\r\n  e.dataTransfer.setData('card_id',target.id)\r\n  setTimeout(()=>{\r\n    target.style.display=\"none\"\r\n  },0)\r\n  }\r\n\r\n  \r\n  const dragOver = e=>{\r\n    e.stopPropagation()\r\n    \r\n  }\r\nreturn(\r\n  \r\n    \r\n<img \r\nid={props.id}\r\nclassName={props.className}\r\ndraggable={props.draggable}\r\nonDragStart={dragStart}\r\nonDragOver={dragOver}\r\nonClick={props.onClick}\r\nsrc={props.image} alt=\"\"></img>\r\n)\r\n\r\n}\r\nexport default Card","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport {dataBase} from '../components/dataBase'\nimport Board from '../components/board'\nimport Card from '../components/Card'\nimport Button from '@material-ui/core/Button'; \n\n\n\nclass MainPage extends React.Component {\n  constructor(props){\n    super(props)\n    this.state={\n      storyName:null,\n      storyDescription:null,\n      image:null,\n      date:null,\n      \n    \n    }\n    this.loadingStory=this.loadingStory.bind(this)\n  }\n  \n  loadingStory(obj){\n    \n    this.setState({\n      storyName:obj.storyName,\n      storyDescription:obj.storyDescription,\n      image:obj.image,\n      date:obj.mainPageDate,\n    })\n     \n  }\n \n\n  \n  \n  \n    render(){\n    \n      return (\n    <div id=\"containerBoard\" className=\"container\">\n      <div className=\"textAndImage\">\n        <div className=\"mainText\">\n          <h1 style={{\n           fontSize:30, \n           fontStyle:'italic'\n              }}>      \n               {this.state.storyName} </h1>\n          <p style={{marginTop:25}}>{this.state.date} </p>\n          <p className=\"nocvar\">{this.state.storyDescription}</p>\n        </div>\n        \n        <img className=\"largePic\" alt =\"\" src ={this.state.image}/>\n      </div>\n      <Link className=\"toCreatePage\" to='/CreateExp'>\n        <Button variant=\"contained\" color=\"primary\" className=\"noDecoration\"  >Create a new story</Button>\n      </Link>\n      <Board className=\"trashBlock\">\n      <img className=\"trash\"src=\"./trash.png\" alt=\"\" />\n      </Board>\n      <Board  className=\"netflixslide\">\n        {\n        dataBase.map((obj)=>\n\n        <Card className=\"smallPic\"\n              draggable=\"true\" \n              image={obj.image} \n              src={obj.image} alt=\"\" \n              id={obj.id}\n              onClick={this.loadingStory.bind(this, obj)}/>)}\n        \n      </Board>\n     \n    </div>\n      )\n    }\n  }\n  \n  export default MainPage","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport '../style.css'\nimport Button from '@material-ui/core/Button';\n\n\n\nfunction StartPage() {\n  return (\n    <div className=\"startPage\">\n      <h1 className=\"startPageText\">Capture Your Story</h1>\n      \n    <p className=\"startPageText\">The purpose of this app is to connnect funny <br/>\n         or interesting stories to your selected photos. </p>\n    <h2 >a few points to keep in mind:</h2>\n      <ul>\n        <li>Don't refresh the app when you use it because i didn't learn databases yet (changes will not be saved). </li>\n        <li>you have the option to drag and drop the stories you created.if you wish to discard one of them,<br/>  drag it to the trash icon.</li> \n        <li>there is a bug that happens if you drag the pictures on top of each other, im trying to fix it. </li>\n      </ul>\n      <Link className=\"startPageText startButton\" to='/MainPage'>\n        <Button variant=\"contained\" color=\"primary\" className=\" \">Click to start</Button>\n      </Link>\n    </div>\n  );\n}\n\nexport default StartPage;\n","import React from 'react';\r\nimport CreateExp from './pages/CreateExp';\r\nimport MainPage from './pages/MainPage';\r\nimport StartPage from './pages/StartPage';\r\nimport {BrowserRouter as Router,Route} from 'react-router-dom';\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(props){\r\n    super(props)\r\n    this.state={\r\n      cardId:0,\r\n    }\r\n\r\n     this.cardId=this.cardId.bind(this)\r\n     this.returnCardId=this.returnCardId.bind(this)\r\n  }\r\n   \r\n  returnCardId(){\r\n       return this.state.cardId\r\n     }\r\n  \r\n  cardId(){\r\n    this.setState({cardId:this.state.cardId+1})\r\n  }\r\n   \r\n    render(){\r\n      return (\r\n    <Router basename={window.location.pathname || ''}>\r\n      <Route exact path=\"/MainPage\" \r\n        render={(props) => <MainPage {...props} \r\n        />} />\r\n\r\n      <Route exact path=\"/CreateExp\" \r\n        render={(props) => <CreateExp {...props} \r\n        cardId={this.cardId.bind(this)}\r\n        returnCardId={this.returnCardId.bind(this)}\r\n        \r\n\r\n      />} />\r\n\r\n      <Route path=\"/\" exact component={StartPage} />\r\n      \r\n    \r\n    </Router>\r\n      )\r\n    }\r\n  }\r\n  \r\n  export default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n   <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}